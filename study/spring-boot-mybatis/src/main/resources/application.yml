server:
  port: 18080
  tomcat:
    uri-encoding: utf-8
spring:
  datasource:
      password: 111111
      username: root
      url: jdbc:mysql://localhost:3306/dbgirl?useUnicode=true&&characterEncoding=utf8
      driver-class-name: com.mysql.jdbc.Driver
  redis:
#  Redis数据库索引（默认为0）
    database: 0
    host: localhost
    port: 6379
    password:
    pool:
      max-active: 8
      max-wait: 10000
      max-idle: 8
      min-idle: 0
    timeout: 10000



redisson:
  url: redis://localhost:6379
  password:
  connectionPoolSize: 64
  connectionMinimumIdleSize: 10

#      关闭tomcat启动的logo
#  main:
#    banner-mode: "off"

druid:
    #连接池的配置信息
    url: ${spring.datasource.url}
    username: ${spring.datasource.username}
    password: ${spring.datasource.password}
    driverClassName: ${spring.datasource.driver-class-name}
    initialSize: 5
    minIdle: 5
    maxActive: 20
    maxWait: 60000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 300000
    validationQuery: SELECT 1 FROM DUAL
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,log4j
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
    # 合并多个DruidDataSource的监控数据
    useGlobalDataSourceStat: true
mybatis:
  config-location: classpath:mybatis-config.xml
  type-aliases-package: com.immoc.pojo
  mapper-locations: classpath:mapper/*.xml

